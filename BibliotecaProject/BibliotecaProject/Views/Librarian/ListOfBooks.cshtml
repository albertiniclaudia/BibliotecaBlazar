@model IndexModel

@{

    string[] storePosition = new string[100];
    int count = 0;
    foreach (var item2 in Model.getPosition)
    {

        storePosition[count] =  "Room: " + item2.Room + " Shelf: " + item2.Shelf + " Rack: " + item2.Rack + " Place: " + item2.Place;
        count++;
    }

    count = 0;

}

<div>
    <div class="row mb-3">
        <div class="col-12 mb-3 mt-3">
            <h1 style="text-align:center;">I Libri all'interno della tua biblioteca</h1>
        </div> 
        
        <div class="col-2">
            <label for="typeOfBooks" class="ms-5">Type Of Books Filter</label>
            <select class="btn btn-primary ms-5" form="merg" name="typeOfBooks" id="typeOfBooks">
                    <option value="" selected>Seleziona</option>
                    <option value="giallo">Giallo</option>
                    <option value="narrativa">Narrativa</option>
                    <option value="horror">Horror</option>
                    <option value="rosa">Rosa</option>
                    <option value="avventura">Avventura</option>
            </select>
        </div>
        <div class="col-2">
                <label for="publishingHouse"> Publishing House </label>
                <select class="btn btn-primary" form="merg" name="publishingHouse" id="publishingHouse">
                <option value="" selected>Seleziona</option>
                <option value="mondatori">Mondatori</option>
                <option value="Universal">Universal</option>
                </select>
        </div>
        <div class="col-1"></div>
        <div class="col-3">
            <input type="text"  class="form-control" name="search" id="search" placeholder="search..." aria-label="Search">
        </div>
        <div class="col-2"></div>
        <div class="col-2">
            <a class="btn btn-success" asp-area="" asp-controller="Librarian" asp-action="AddBooks">Nuovo Libro</a>
        </div>
        
    </div> 
    <table class="table">
        <thead>
            <th>Title</th>
            <th>Author</th>
            <th>Publishing House</th>
            <th>Type Of Book</th>
            <th>Position</th>
            <th>ISBN</th>
            <th class="span-2">Editing of Books</th>
        </thead>
        @foreach (var item in Model.getBookData){
            <tr>
                <th scope="row">@item.Title</th>
                <th scope="row">@item.Author</th>
                <th scope="row">@item.PublishingHouse</th>
                <th scope="row">@item.TypeOfBooks</th>
                <th scope="row">@item.ISBN</th>
                <th>
                    <a class="btn  btn-warning" asp-controller="Librarian" asp-action="EditBooks" asp-route-id=@item.Id_book>Edit</a>
                    @Html.ActionLink("Delete","DeleteBooks",new {id = @item.Id_book}, new { @class = "btn btn-danger"})
                </th>
                
            </tr>
            count++;
        }
    </table>

</div>


@section Scripts{

    <script>

        $(document).ready(function(){

            var typeOfBookValue;

            var publishingHouseValue;

            var typeOfBook;

            var publishingHouse;

            $("#typeOfBooks").change(function(){
                
                typeOfBookValue = $("#typeOfBooks").val();

                $("table tr").each(function(result){

                     typeOfBook = $(this).find("th:nth-child(4)").text();

                    publishingHouse = $(this).find("th:nth-child(3)").text();

                    if(result !== 0){

                        if ((typeOfBook.toLowerCase().indexOf(typeOfBookValue.toLowerCase()) < 0)
                            || (publishingHouseValue   && publishingHouseValue !== "" && publishingHouse.toLowerCase().indexOf(publishingHouseValue.toLowerCase()) < 0)) {
                             
                             $(this).hide();

                        }else{

                            $(this).show();
                        } 


                    }

                });


            });

            $("#publishingHouse").change(function(){

                publishingHouseValue = $("#publishingHouse").val();

                $("table tr").each(function(result){

                    publishingHouse = $(this).find("th:nth-child(3)").text();

                    typeOfBook = $(this).find("th:nth-child(4)").text();

                    if(result !== 0){

                         if((publishingHouse.toLowerCase().indexOf(publishingHouseValue.toLowerCase()) < 0)
                            || (typeOfBookValue  && typeOfBookValue !== ""  && typeOfBook.toLowerCase().indexOf(typeOfBookValue.toLowerCase()) < 0)) {

                             $(this).hide();

                         }else{


                             $(this).show();
                         }


                     }

                });

            });



            $("#search").keyup(function (e) {

                    if (e.keyCode != 46) {

                        var searchValue = $(this).val();

                    }

                 $("table tr").each(function (results) {

                        if (results !== 0) {

                           var title = $(this).find("th:nth-child(1)").text();

                           typeOfBook = $(this).find("th:nth-child(4)").text();

                           publishingHouse = $(this).find("th:nth-child(3)").text();

                           if ((title.toLowerCase().indexOf(searchValue.toLowerCase()) < 0)
                               || (typeOfBookValue && typeOfBookValue !== ""  && typeOfBook.toLowerCase().indexOf(typeOfBookValue.toLowerCase()) < 0)
                               || (publishingHouseValue   && publishingHouseValue !== "" && publishingHouse.toLowerCase().indexOf(publishingHouseValue.toLowerCase()) < 0)) {
                                
                                    $(this).hide();

                           }else {

                                    $(this).show();

                           }


                        }

                 });
            });

        });

       @* $(document).ready(function () {

            $("#search").keyup(function (e) {

                if (e.keyCode == 46) {

                    console.log("ops");

                } else {

                    var searchValue = $(this).val();

                }


                $("table tr").each(function(results) {

                    if(results !== 0){

                        var title = $(this).find("th:nth-child(1)").text();

                        if(title.indexOf(searchValue) !== 0 && title.toLowerCase().indexOf(searchValue.toLowerCase()) < 0){

                            $(this).hide();

                        }else{

                            $(this).show();
                        }

                    }

                });

            });
        }); *@

        @* $(document).ready(function () {

            $("#typeOfBooks,#publishingHouse").change(function () {

                var typeOfBooksValue = $("#typeOfBooks").val();

                var publishingHouseValue = $("#publishingHouse").val();

                $("table tr").each(function(results) {

                    if (results !== 0 && !publishingHouseValue.trim()) {

                        var typeOfBooks = $(this).find("th:nth-child(4)").text();

                        if(typeOfBooks.indexOf(typeOfBooksValue) !== 0 && typeOfBooks.toLowerCase().indexOf(typeOfBooksValue.toLowerCase()) < 0){

                            $(this).hide();

                        }else{

                            $(this).show();
                        }
                        
                    } else if (results !== 0 && publishingHouseValue.trim()) {

                        var publishingHouse = $(this).find("th:nth-child(3)").text();

                        if (publishingHouse.indexOf(publishingHouseValue) !== 0 && publishingHouse.toLowerCase().indexOf(publishingHouseValue.toLowerCase()) < 0) {

                            $(this).hide();

                        } else {

                            $(this).show();
                        }


                    } 

                });

            });
        }); *@

       @* $(document).ready(function () {

            $("#publishingHouse").change(function () {

                var typeOfBooksValue = $(this).val();

                $("table tr").each(function (results) {

                    if (results !== 0) {

                        var typeOfBooks = $(this).find("th:nth-child(3)").text();

                        if (typeOfBooks.indexOf(typeOfBooksValue) !== 0 && typeOfBooks.toLowerCase().indexOf(typeOfBooksValue.toLowerCase()) < 0) {

                            $(this).hide();

                        } else {

                            $(this).show();
                        }

                    }

                });

            });
        });*@


    </script>

}